fn <- 'output.txt'
fd <- read.csv(fn, header=FALSE)
setwd('sketchbook/arduino-airquality/Module_COSensor/outputs/')
fd <- read.csv(fn, header=FALSE)
names(fd)
names(fd) <- c('type', 'value')
plot(fd$value, col=fd$type)
plot_co_data <- function(fn) {
fd <- read.csv(fn, header=FALSE)
names(fd) <- c('type', 'value')
plot(fd$value, col=fd$type)
}
plot_co_data('output2.txt')
plot_co_data('output3.txt')
legent(0, max(fd$value), col=c(1:3))
legend(0, max(fd$value), col=c(1:3))
legend(0, max(fd$value), legend=names(table(fd$type)), col=c(1:3))
legend(0, max(fd$value), legend=names(table(fd$type)), col=c(1:3), pcd=1)
legend(0, max(fd$value), legend=names(table(fd$type)), col=c(1:3), pch=1)
legend(0, 'top', legend=names(table(fd$type)), col=c(1:3), pch=1)
?legend
legend('topleft', legend=names(table(fd$type)), col=c(1:3), pch=1)
plot_co_data <- function(fn) {
fd <- read.csv(fn, header=FALSE)
names(fd) <- c('type', 'value')
plot(fd$value, col=fd$type)
legend('topleft', legend=names(table(fd$type)), col=c(1:3), pch=1)
}
plot_co_data('output4.txt')
plot_co_data('output5.txt')
plot_co_data('output5.txt')
plot_co_data('li-ion_output.txt')
plot_co_data('li-ion_output.txt')
plot_co_data('li-ion_output.txt')
plot_co_data('li-ion_output.txt')
plot_co_data('butane_exposure.txt')
plot_co_data('butane_exposure.txt')
plot_co_data('butane_exposure.txt')
plot_co_data('butane_exposure.txt')
plot_co_data('burning.txt')
plot_co_data('burning.txt')
plot_co_data('burning.txt')
plot_co_data('burning.txt')
plot_co_data('burning.txt')
plot_co_data <- function(fn) {
fd <- read.csv(fn, header=FALSE)
names(fd) <- c('type', 'value')
plot(fd$value, col=fd$type)
legend('topleft', legend=names(table(fd$type)), col=c(1:3), pch=1)
return(fd)
}
burn <- plot_co_data('burning.txt')
plot(burn$value, type='l')
